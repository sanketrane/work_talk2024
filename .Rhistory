)
) %>%
kableExtra::cell_spec(which.min(abs(data$Ours - 1)), bold = T, color = "navy")
# make column heders bold
kable(data) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
) %>%
kableExtra::cell_spec(which.min(abs(data$Ours - 1)), bold = T, color = "navy")
# make column heders bold
kable(data) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
)
## highlight the value closest to 1 in each row
kable(data_f) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
) %>%
kableExtra::column_spec(mr, background = "yellow")
mr
## highlight the value closest to 1 in each row
kable(data_f) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
) %>%
kableExtra::column_spec(which.min(abs(row) - 1), background = "yellow")
## highlight the value closest to 1 in each row
kable(data_f) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
) %>%
row_spec(2, color = "navy")
data %>%
#mutate()
kbl() %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
)
data %>%
#mutate()
kbl() %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
) %>%
row_spec(2, cell_spec() color = "navy")
data %>%
#mutate()
kbl() %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
) %>%
row_spec(2, color = "navy")
data %>%
#mutate()
kbl() %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
) %>%
row_spec(2, color = "navy")
## highlight the value closest to 1 in each row
kable(data_f) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
)
# find the index of the value closest to 1 in each row
data_f[1]
library(knitr)
library(tidyverse)
library(kableExtra)
data <- data.frame(
Statistic = c(
"$E(\\alpha)$", "$\\text{Var}(\\alpha)$",
"$E(\\delta)$", "$\\text{Var}(\\delta)$"
),
`Ours` = c(1.1373, 0.0036, 1.0829, 0.0036),
`ABC-SMC-DRF` = c(1.1215, 0.0333, 0.9704, 0.0313),
`ABC-DRF` = c(0.7562, 0.5953, 1.3092, 0.3593),
`ABC-SMC` = c(1.2912, 0.1104, 1.0269, 0.1049)
)
df <- t(data)
data_f <- as.data.frame(df)
data_f$V1
## remove the column names
colnames(data_f) <- NULL
rownames(data_f) <- c(
"Statistic", "Ours (RNN-VAE)",
"ABC-SMC-DRF", "ABC-DRF", "ABC-SMC"
)
data_f[1]
data_f[1] <- cell_spec(which.min(abs(data_f[1] - 1.0)), color = "blue")
## highlight the value closest to 1 in each row
kable(data_f) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
)
## highlight the value closest to 1 in each row
kable(data_f, escape = F) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
)
## highlight the value closest to 1 in each row
kable(data_f, escape = T) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
)
"striped", "hover""
## highlight the value closest to 1 in each row
kable(data_f, escape = T) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover"
)
)
## highlight the value closest to 1 in each row
kable(data_f, format = "html", escape = T) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover"
)
)
which.min(abs(data_f[1] - 1.0))
data_f[1] - 1
data_f[1]
library(knitr)
library(tidyverse)
library(kableExtra)
data <- data.frame(
Statistic = c(
"$E(\\alpha)$", "$\\text{Var}(\\alpha)$",
"$E(\\delta)$", "$\\text{Var}(\\delta)$"
),
`Ours` = c(1.1373, 0.0036, 1.0829, 0.0036),
`ABC-SMC-DRF` = c(1.1215, 0.0333, 0.9704, 0.0313),
`ABC-DRF` = c(0.7562, 0.5953, 1.3092, 0.3593),
`ABC-SMC` = c(1.2912, 0.1104, 1.0269, 0.1049)
)
df <- t(data)
data_f <- as.data.frame(df)
## remove the column names
colnames(data_f) <- NULL
rownames(data_f) <- c(
"Statistic", "Ours (RNN-VAE)",
"ABC-SMC-DRF", "ABC-DRF", "ABC-SMC"
)
data_f[1] - 1
data$Ours - 1
data[1] - 1
data[1]
data[2]
data[2,] - 1
data[2,]
data[2,2:] - 1
data[2,2:5] - 1
data[2,2:5]  <- cell_spec(which.min(abs(data[2,2:5] - 1.0)), color = "blue")
data %>%
#mutate()
kbl() %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
) %>%
row_spec(2, color = "navy")
data %>%
#mutate()
kbl(format = "html", escape = F) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
) %>%
row_spec(2, color = "navy")
which.min(abs(data[2,2:5] - 1.0))
which.min(abs(data[2,2:5] - 1.0)
data[2,2:5] - 1
data[2,2:5] - 1
library(knitr)
library(tidyverse)
library(kableExtra)
data <- data.frame(
Statistic = c(
"$E(\\alpha)$", "$\\text{Var}(\\alpha)$",
"$E(\\delta)$", "$\\text{Var}(\\delta)$"
),
`Ours` = c(1.1373, 0.0036, 1.0829, 0.0036),
`ABC-SMC-DRF` = c(1.1215, 0.0333, 0.9704, 0.0313),
`ABC-DRF` = c(0.7562, 0.5953, 1.3092, 0.3593),
`ABC-SMC` = c(1.2912, 0.1104, 1.0269, 0.1049)
)
df <- t(data)
data_f <- as.data.frame(df)
## remove the column names
colnames(data_f) <- NULL
rownames(data_f) <- c(
"Statistic", "Ours (RNN-VAE)",
"ABC-SMC-DRF", "ABC-DRF", "ABC-SMC"
)
data[2,2:5] - 1
which.min(abs(data[2,2:5] - 1)
)
which.min(abs(data[1,2:5] - 1))
which.min(abs(data[1,2:5] - 1))
abs(data[1,2:5] - 1)
ifelse(which.min(abs(data[1,2:5] - 1)))
data[1,2:5]  <- cell_spec(ifelse(which.min(abs(data[1,2:5] - 1.0)), color = "blue", "red"))
data[1,2:5]  <- cell_spec(data[1, 2:5], "html", color = ifelse(which.min(abs(data[1,2:5] - 1.0)), "navy", "red"))
data %>%
#mutate()
kbl(format = "html", escape = F) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
) %>%
row_spec(2, color = "navy")
library(knitr)
library(tidyverse)
library(kableExtra)
data <- data.frame(
Statistic = c(
"$E(\\alpha)$", "$\\text{Var}(\\alpha)$",
"$E(\\delta)$", "$\\text{Var}(\\delta)$"
),
`Ours` = c(1.1373, 0.0036, 1.0829, 0.0036),
`ABC-SMC-DRF` = c(1.1215, 0.0333, 0.9704, 0.0313),
`ABC-DRF` = c(0.7562, 0.5953, 1.3092, 0.3593),
`ABC-SMC` = c(1.2912, 0.1104, 1.0269, 0.1049)
)
## remove the column names
colnames(data_f) <- NULL
rownames(data_f) <- c(
"Statistic", "Ours (RNN-VAE)",
"ABC-SMC-DRF", "ABC-DRF", "ABC-SMC"
)
data %>%
# mutate()
kbl(format = "html", escape = F) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
)
##
## color the cell in row 2 which has closest value to 1.0
data %>%
mutate(
`Ours` = ifelse(abs(`Ours` - 1.0) == min(abs(`Ours` - 1.0)),
cell_spec(`Ours`, color = "red"),
cell_spec(`Ours`, color = "black")
),
`ABC-SMC-DRF` = ifelse(abs(`ABC-SMC-DRF` - 1.0) == min(abs(`ABC-SMC-DRF` - 1.0)),
cell_spec(`ABC-SMC-DRF`, color = "red"),
cell_spec(`ABC-SMC-DRF`, color = "black")
),
`ABC-DRF` = ifelse(abs(`ABC-DRF` - 1.0) == min(abs(`ABC-DRF` - 1.0)),
cell_spec(`ABC-DRF`, color = "red"),
cell_spec(`ABC-DRF`, color = "black")
),
`ABC-SMC` = ifelse(abs(`ABC-SMC` - 1.0) == min(abs(`ABC-SMC` - 1.0)),
cell_spec(`ABC-SMC`, color = "red"),
cell_spec(`ABC-SMC`, color = "black")
)
) %>%
kbl(format = "html", escape = F) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
)
data <- data.frame(
Statistic = c(
"$E(\\alpha)$", "$\\text{Var}(\\alpha)$",
"$E(\\delta)$", "$\\text{Var}(\\delta)$"
),
`Ours` = c(1.1373, 0.0036, 1.0829, 0.0036),
`ABC-SMC-DRF` = c(1.1215, 0.0333, 0.9704, 0.0313),
`ABC-DRF` = c(0.7562, 0.5953, 1.3092, 0.3593),
`ABC-SMC` = c(1.2912, 0.1104, 1.0269, 0.1049)
)
## remove the column names
colnames(data_f) <- NULL
rownames(data_f) <- c(
"Statistic", "Ours (RNN-VAE)",
"ABC-SMC-DRF", "ABC-DRF", "ABC-SMC"
)
data %>%
# mutate()
kbl(format = "html", escape = F) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
)
## color the cell in row 2 which has closest value to 1.0
data %>%
mutate(
`Ours` = ifelse(abs(`Ours` - 1.0) == min(abs(`Ours` - 1.0)),
cell_spec(`Ours`, color = "red"),
cell_spec(`Ours`, color = "black")
),
`ABC-SMC-DRF` = ifelse(abs(`ABC-SMC-DRF` - 1.0) == min(abs(`ABC-SMC-DRF` - 1.0)),
cell_spec(`ABC-SMC-DRF`, color = "red"),
cell_spec(`ABC-SMC-DRF`, color = "black")
),
`ABC-DRF` = ifelse(abs(`ABC-DRF` - 1.0) == min(abs(`ABC-DRF` - 1.0)),
cell_spec(`ABC-DRF`, color = "red"),
cell_spec(`ABC-DRF`, color = "black")
),
`ABC-SMC` = ifelse(abs(`ABC-SMC` - 1.0) == min(abs(`ABC-SMC` - 1.0)),
cell_spec(`ABC-SMC`, color = "red"),
cell_spec(`ABC-SMC`, color = "black")
)
) %>%
kbl(format = "html", escape = F) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
)
library(knitr)
library(tidyverse)
library(kableExtra)
data <- data.frame(
Statistic = c(
"$E(\\alpha)$", "$\\text{Var}(\\alpha)$",
"$E(\\delta)$", "$\\text{Var}(\\delta)$"
),
`Ours` = c(1.1373, 0.0036, 1.0829, 0.0036),
`ABC-SMC-DRF` = c(1.1215, 0.0333, 0.9704, 0.0313),
`ABC-DRF` = c(0.7562, 0.5953, 1.3092, 0.3593),
`ABC-SMC` = c(1.2912, 0.1104, 1.0269, 0.1049)
)
## remove the column names
colnames(data_f) <- NULL
rownames(data_f) <- c(
"Statistic", "Ours (RNN-VAE)",
"ABC-SMC-DRF", "ABC-DRF", "ABC-SMC"
)
## color the cell in row 2 which has closest value to 1.0
data %>%
mutate(
`Ours` = ifelse(abs(`Ours` - 1.0) == min(abs(`Ours` - 1.0)),
cell_spec(`Ours`, color = "red"),
cell_spec(`Ours`, color = "black")
),
`ABC-SMC-DRF` = ifelse(abs(`ABC-SMC-DRF` - 1.0) == min(abs(`ABC-SMC-DRF` - 1.0)),
cell_spec(`ABC-SMC-DRF`, color = "red"),
cell_spec(`ABC-SMC-DRF`, color = "black")
),
`ABC-DRF` = ifelse(abs(`ABC-DRF` - 1.0) == min(abs(`ABC-DRF` - 1.0)),
cell_spec(`ABC-DRF`, color = "red"),
cell_spec(`ABC-DRF`, color = "black")
),
`ABC-SMC` = ifelse(abs(`ABC-SMC` - 1.0) == min(abs(`ABC-SMC` - 1.0)),
cell_spec(`ABC-SMC`, color = "red"),
cell_spec(`ABC-SMC`, color = "black")
)
) %>%
kbl(format = "html", escape = F) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
)
# Color the cell in the first row and first column
# with a light blue background
# and bold font
kable_styling(data, cell_spec = c(
rep(NA, 4),
rep(list(c("background-color", "font-weight")),
c("lightblue", "bold"))
))
# Color the cell in the first row and first column
# with a light blue background
# and bold font
kable_styling(data, cell_spec = c(
rep(NA, 4),
c("lightblue", "bold"))
))
library(formattable)
library(knitr)
library(tidyverse)
library(formattable)
data <- data.frame(
Statistic = c(
"$E(\\alpha)$", "$\\text{Var}(\\alpha)$",
"$E(\\delta)$", "$\\text{Var}(\\delta)$"
),
`Ours` = c(1.1373, 0.0036, 1.0829, 0.0036),
`ABC-SMC-DRF` = c(1.1215, 0.0333, 0.9704, 0.0313),
`ABC-DRF` = c(0.7562, 0.5953, 1.3092, 0.3593),
`ABC-SMC` = c(1.2912, 0.1104, 1.0269, 0.1049)
)
## remove the column names
colnames(data_f) <- NULL
formattable(data,
align = c("l",rep("c", 4)))
formattable(data, align = c("l",rep("r", 4)), list(
area(row = 2) ~ color_tile("#DeF7E9", "#71CA97")))
library(knitr)
library(tidyverse)
library(kableExtra)
data <- data.frame(
Statistic = c(
"$E(\\alpha)$", "$\\text{Var}(\\alpha)$",
"$E(\\delta)$", "$\\text{Var}(\\delta)$"
),
`Ours` = c(1.1373, 0.0036, 1.0829, 0.0036),
`ABC-SMC-DRF` = c(1.1215, 0.0333, 0.9704, 0.0313),
`ABC-DRF` = c(0.7562, 0.5953, 1.3092, 0.3593),
`ABC-SMC` = c(1.2912, 0.1104, 1.0269, 0.1049)
)
## remove the column names
colnames(data_f) <- NULL
rownames(data_f) <- c(
"Statistic", "Ours (RNN-VAE)",
"ABC-SMC-DRF", "ABC-DRF", "ABC-SMC"
)
data %>%
# mutate()
kbl(format = "html", escape = F) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
)
## remove the column names
colnames(data) <- c(
"Statistic", "Ours (RNN-VAE)",
"ABC-SMC-DRF", "ABC-DRF", "ABC-SMC"
)
data %>%
# mutate()
kbl(format = "html", escape = F) %>%
kableExtra::kable_styling(
bootstrap_options = c(
"striped", "hover",
"condensed", "responsive"
)
)
xaringan::inf_mr()
install.packages("icons")
# install.packages("remotes")
remotes::install_github("mitchelloharawild/icons")
icons::download_academicons()
icons::download_fontawesome()
icons::download_fontawesome()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
# install.packages("remotes")
remotes::install_github("jhelvy/xaringanBuilder")
library(xaringanBuilder)
